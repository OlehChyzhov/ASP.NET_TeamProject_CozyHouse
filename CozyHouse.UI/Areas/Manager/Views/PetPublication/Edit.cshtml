@model ShelterPetPublication
@{
    ViewBag.Title = "Edit Pet Publication";
    Guid userId = Guid.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value!);
}

<link rel="stylesheet" href="~/css/Shared/PetPublications/create_edit.css" asp-append-version="true" />

<form class="top-button">
    <button asp-area="Manager" asp-controller="PetPublication" asp-action="Index">Back to List</button>
</form>

<div class="page-layout-container">
    <div class="form-container">
        <form method="post" enctype="multipart/form-data" asp-area="Manager" asp-controller="PetPublication" asp-action="Edit" class="main-form">
            <input type="hidden" asp-for="Id" />

            <h1>Edit Pet Publication</h1>

            <h2>Publication Information</h2>
            <div>
                <label asp-for="PublicationTitle">Title</label>
                <input type="text" placeholder="Title" asp-for="PublicationTitle" />
            </div>
            <div>
                <label asp-for="Summary">Summary</label>
                <textarea placeholder="Summary" asp-for="Summary"></textarea>
            </div>
            <div>
                <label asp-for="Description">Description</label>
                <textarea placeholder="Description" asp-for="Description"></textarea>
            </div>
            <div>
                <label asp-for="Location">Location</label>
                <input placeholder="Location" asp-for="Location" />
            </div>

            <h2>Pet Information</h2>
            <div>
                <label asp-for="PetName">Pet Name</label>
                <input placeholder="Pet Name" asp-for="PetName" />
            </div>
            <div>
                <label asp-for="PetAge">Pet Age</label>
                <input placeholder="Pet Age" asp-for="PetAge" /> @* Consider type="number" *@
            </div>

            <div>
                <label asp-for="PetType">Pet Type:</label>
                <select asp-for="PetType">
                    @{
                        foreach (Species species in Enum.GetValues(typeof(Species)))
                        {
                            <option value="@species" selected="@(Model.PetType == species)">@species.ToString()</option>
                        }
                    }
                </select>
            </div>
            <div>
                <label asp-for="Breed">Breed</label>
                <input placeholder="Breed" asp-for="Breed" />
            </div>

            <div class="checkbox-with-label">
                <input type="checkbox" asp-for="IsVaccinated" id="IsVaccinatedEdit" />
                <label for="IsVaccinatedEdit">Is Vaccinated?</label>
            </div>
            <div class="checkbox-with-label">
                <input type="checkbox" asp-for="IsSterilized" id="IsSterilizedEdit" />
                <label for="IsSterilizedEdit">Is Sterilized?</label>
            </div>

            <div>
                <label for="newPetImagesInput">Upload new images (optional, will add to existing):</label>
                <input type="file" name="newPetImages" id="newPetImagesInput" multiple onchange="previewNewImages(event)" />
            </div>

            <div>
                <button type="submit">Update Publication</button>
            </div>
        </form>
    </div>

    <div class="image-gallery-container">
        <h2>New Images Preview</h2>
        <div id="newImagePreviewArea" class="image-preview-grid">
            <p class="no-images-text">No new images selected.</p>
        </div>

        @if (Model.Images != null && Model.Images.Any())
        {
            <h2>Current Images</h2>
            <p class="instruction-text">Check images you want to remove:</p>
            <div class="current-images-grid image-preview-grid">
                @for (int i = 0; i < Model.Images.Count; i++)
                {
                    var image = Model.Images[i];
                    <div class="image-preview-item current-image-item">
                        <img src="@image.ImageUrl" alt="Current pet image: @Model.PetName" />
                        <div class="delete-image-overlay">
                            @* Важливо: name="ImagesToDelete" має відповідати параметру у вашому методі Edit контролера (наприклад, List<Guid> ImagesToDelete, якщо ImageUrl - це Guid).
                                Якщо ви використовуєте ImageUrl як ідентифікатор, переконайтеся, що ваш бекенд це обробляє. *@
                            <input type="checkbox" name="ImagesToDelete" value="@image.Id" id="deleteImage_@i" class="delete-image-checkbox" />
                            <label for="deleteImage_@i" class="delete-image-label" title="Mark to Delete"></label>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <h2>Current Images</h2>
            <p class="no-images-text">No current images available for this publication.</p>
        }
    </div>
</div>

@section Scripts {
    <script>
        function previewNewImages(event) {
            const previewArea = document.getElementById('newImagePreviewArea');
            previewArea.innerHTML = '';

            const files = event.target.files;
            if (files && files.length > 0) {
                Array.from(files).forEach(file => {
                    if (file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const imgContainer = document.createElement('div');
                            imgContainer.classList.add('image-preview-item');
                            const imgElement = document.createElement('img');
                            imgElement.src = e.target.result;
                            imgElement.alt = file.name;
                            imgContainer.appendChild(imgElement);
                            previewArea.appendChild(imgContainer);
                        }
                        reader.readAsDataURL(file);
                    }
                });
            } else {
                previewArea.innerHTML = '<p class="no-images-text">No new images selected.</p>';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const currentImageItems = document.querySelectorAll('.current-image-item');
            currentImageItems.forEach(item => {
                const checkbox = item.querySelector('.delete-image-checkbox');
                if (checkbox) {
                    checkbox.addEventListener('change', function () {
                        if (this.checked) {
                            item.classList.add('marked-for-deletion');
                        } else {
                            item.classList.remove('marked-for-deletion');
                        }
                    });
                }
            });
        });
    </script>
}